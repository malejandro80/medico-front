on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]
name: deploy pipeline
jobs:
  avoid_redunday:
    runs-on: ubuntu-latest
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.9.1
        with:
          access_token: ${{ github.token }}
  notify:
  
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: toko-bifrost/ms-teams-deploy-card@master #  or "./" if in a local set-up
        if: always()
        with:
          github-token: ${{ github.token }}
          webhook-uri: ${{ secrets.TEAMS_WEBHOOK }}
          card-layout-exit: compact
  notify2:
  
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: toko-bifrost/ms-teams-deploy-card@master #  or "./" if in a local set-up
        if: always()
        with:
          github-token: ${{ github.token }}
          webhook-uri: ${{ secrets.TEAMS_WEBHOOK }}
          environment: development
          show-on-failure: true
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout project
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Cache Dependencies
        uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-
      - name: setup node
        uses: actions/setup-node@v3
        with:
          node-version: 14
      - name: Install dependencies
        run: |
          yarn install --frozen-lockfile
      - name: lint
        run: npm run lint
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout project
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Cache Dependencies
        uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-
      - name: setup node
        uses: actions/setup-node@v3
        with:
          node-version: 14
      - name: Install dependencies
        run: |
          yarn install --frozen-lockfile
      - name: Build
        run: |
          npm run build
      - name: upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: .next
          path: .next
  tests:
    needs: [lint,build]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout project
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Cache Dependencies
        uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-
      - name: setup node
        uses: actions/setup-node@v3
        with:
          node-version: 14
      - name: Install dependencies
        run: |
          yarn install --frozen-lockfile
      - name: download artifact
        uses: actions/download-artifact@v2
        with:
          name: .next
          path: .next
      - name: test
        run: |
          npm run test
  deploy:
    needs: [tests]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout project
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Cache Dependencies
        uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-
      - name: setup node
        uses: actions/setup-node@v3
        with:
          node-version: 14
      - name: Build
        run: |
          yarn install --frozen-lockfile
      - name: Deploy
        uses: amondnet/vercel-action@v20
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.ORG_ID }}
          vercel-project-id: ${{ secrets.PROJECT_ID }}
          vercel-args: '--prod'
          scope: ${{ secrets.ORG_ID }}s